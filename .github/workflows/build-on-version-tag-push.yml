# Builds when a release is published.
name: Build Workflow

permissions: write-all

on:
  release:
    types:
      - published

jobs:
  run:
    name: Build Release Package
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup SourcePawn Compiler
      uses: rumblefrog/setup-sp@v1.2.1
      with:
        version: "1.11.x"
        no-spcomp-proxy: true

    - name: Setup Build Dependencies
      run: |
        python3 -m pip install toml chevron

    - name: Setup Ninja Build
      uses: ashutoshvarma/setup-ninja@master
      with:
        version: 1.10.0

    - name: Build Files
      run: |
        python3 configure.py
        ninja

    - name: Upload Include
      id: upload-release-include
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url  }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./build/scripting/include/tf2_sentryfirebullet.inc
        asset_name: tf2_sentryfirebullet.inc
        asset_content_type: text/plain

    - name: Upload Plugin
      id: upload-release-plugin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url  }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./build/plugins/tf2_sentryfirebullet.smx
        asset_name: tf2_sentryfirebullet.smx
        asset_content_type: application/octet-stream

    - name: Upload Game Config
      id: upload-release-gamedata
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url  }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./build/gamedata/FireBullets.txt
        asset_name: FireBullets.txt
        asset_content_type: text/plain
